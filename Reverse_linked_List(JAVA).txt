//Reverse a Doubly Linked List

class DoublyLinkedListNode{
    int data;
    DoublyLinkedListNode prev;
    DoublyLinkedListNode next;
    
    DoublyLinkedListNode(int data){
        this.data = data;
    }
}

public class DoublyLinkedListReverse{
    public static DoublyLinkedListNode reverse(DoublyLinkedListNode head){
        if(head == null || head.next == null){
            return head;
        }
        DoublyLinkedListNode current = head;
        DoublyLinkedListNode temp = null;
        
        while(current != null){
            temp = current.prev;
            current.prev = current.next;
            current.next = temp;
            
            current = current.prev;
        }
    return current.next;
}


public static void main(String[] args){
    DoublyLinkedListNode head = new DoublyLinkedListNode(1);
    head.next = new DoublyLinkedListNode(2);
    head.next.prev = head;
    head.next.next = new DoublyLinkedListNode(3);
    head.next.next.prev = head.next;
    head.next.next.next = new DoublyLinkedListNode(4);
    head.next.next.next.prev = head.next.next;
    head.next.next.next.next = null;
    
    DoublyLinkedListNode reversedHead = reverse(head);
    
    while(reversedHead != null){
        System.out.print(reversedHead.data + " ");
        reversedHead = reversedHead.next;
    }
}
}

